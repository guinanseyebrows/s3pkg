#!/bin/sh

# writing a package manager in sh because i am an idiot

# dependency check
command -v aws >/dev/null 2>&1 || { printf >&2 "ERROR: AWS CLI utilities are not installed.\n" ; exit 1; } 
command -v jq >/dev/null 2>&1 || { printf >&2 "ERROR: jq is not installed.\n" ; exit 1; } 

# set up environment variables
option=$1
packagename=$2
local_dir="/usr/local/$0"
cache_dir="${local_dir}/.cache"
local_pkglist="${local_dir}/pkglist"
prefix="${repo}/${packagename}"
config="${local_dir}/config"

# check for config file and source it - parsing it would be nice. still need a general error handler
if [ "${option}" = "bootstrap" ] ; then printf "" # is there a better way to continue?
    elif [ ! -f "$config" ] ; then printf "Config file error\n" ; exit 1
    else source "${config}"
fi

# again, need general error handler
if [ ! "$option" ] ; then printf "USAGE: $0 <install/remove/update/search> <package-name>\n" ; exit ;fi

bootstrap () {
    # for now, create an empty config. maybe add some interactivity here later?
    mkdir -p "${cache_dir}"
    touch "${local_pkglist}"
    echo 'bucket=""\nrepo=""' > "${config}" 
}

# utility function that checks for package in remote repo
get_remote_pkg () {
    if [ ! "${packagename}" ] ; then printf "USAGE: $0 "${option}"  package-name\n" ; exit ;fi

    remote_pkg=$(aws s3api list-objects-v2 \
        --bucket "$bucketname" \
        --query "Contents[?contains(Key, '${prefix}/${packagename}-')].Key" \
        --output text  )

    if [ ! "${remote_pkg}" ] ; then 
        printf "${packagename} not found.\n"
        exit 1
fi
}

get_remote_manifest () {
    remote_manifest=$(aws s3api list-objects-v2 \
        --bucket "$bucketname" \
        --query "Contents[?contains(Key, '${prefix}/manifest')].Key" \
        --output text )   
    if [ ! "${remote_pkg}" ] ; then
        printf "${packagename} manifest not found.\n"
        exit 1
}

# user function to search for packages in remote repo. 
# needs work: package description from manifest
# might build in get_remote_pkg and add an option to run quietly for usage in other functions
search () {
    get_remote_pkg
    printf "${remote_pkg}\n" | sed 's:.*/::'
}

# install a package
install () {
    get_remote_pkg
    if [ $(grep ${packagename} ${local_pkglist}) ] ; then
        echo "$packagename already installed."
        exit
        else
            aws s3 cp s3://${bucketname}/${remote_pkg} "${cache_dir}" 
            # get remote manifest
            # get remote package
                # untar into cachedir
            # while read manifest
                # chmod and move files into destination directory 
                eval $(awk '/:/ {next}  {split($0,a," "); print "chmod " $3 " ./" $1 "; " "mv ./" $1 " " $2 }' "${manifest}") 
           printf "${remote_pkg}\n" | sed 's:.*/::' >> "${local_pkglist}" 
    fi
}

# update package function
# check version number against local_pkglist entry and run install if remote version is higher
# maybe wrap this in a for loop for global updates?

# remove package function
# check for manifest in package cache first, if no cache, use get_remote_pkg?

# Do The Thing

"${option}" 
